The key to understanding the priority queue is in the functions std::make_heap(), std::push_heap() and std::pop_heap() of the algorithms library. All the important constructors and methods of std::priority_queue are implemented using those functions.

Implemented using heap.

Prove heapify is O(n) operation
	
	For this we use the fact that, A heap of size n has at most floor(n/2^(h+1)) nodes with height h.

	T(n) = Summation(floor(n/2^(h+1))) * O(h) (h=0 to lgn)

void heapSort(int arr[], int n) 
{ 
    for (int i = n / 2 - 1; i >= 0; i--) 
        heapify(arr, n, i); 
  
    for (int i=n-1; i>=0; i--) 
    { 
        swap(arr[0], arr[i]); 
        heapify(arr, i, 0); 
    } 
} 
  